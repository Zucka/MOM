/*lave en database e.g.: CREATE DATABASE smartparentalcontrol;
også kør det følgende
*/


CREATE TABLE control_system
(
    CSId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT ,
    name VARCHAR(30) NOT NULL ,
    street  VARCHAR(50) NOT NULL,
	postcode VARCHAR(30),
	phoneNo VARCHAR(15),
    PRIMARY KEY(CSId)    
);


CREATE TABLE profile
(
    PId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	CSId BIGINT UNSIGNED NOT NULL,
	name VARCHAR(30),
	points DOUBLE DEFAULT 0,
	username varchar(45) NOT NULL UNIQUE,
	password varchar(255) NOT NULL,
	email varchar(100) NOT NULL,
	phone varchar(15) DEFAULT NULL,
	role enum('user','manager') NOT NULL DEFAULT 'user',
	PRIMARY KEY(PId),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId) ON DELETE CASCADE	
);

CREATE TABLE controller
(
    CSerieNo BIGINT UNSIGNED NOT NULL,
	CSId BIGINT UNSIGNED NOT NULL,
	name VARCHAR(30) NOT NULL,
	location VARCHAR(30),
	status  ENUM('!', 'GREEN', 'RED') DEFAULT '!',
	PRIMARY KEY(CSerieNo),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId)	ON DELETE CASCADE	
);

CREATE TABLE tag
(
    TSerieNo BIGINT UNSIGNED NOT NULL,
	CSId BIGINT UNSIGNED NOT NULL,
	profileId BIGINT UNSIGNED,
	name VARCHAR(30),
	active BOOLEAN DEFAULT TRUE,
	PRIMARY KEY(TSerieNo),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId) ON DELETE CASCADE	,
	FOREIGN KEY (profileId) REFERENCES profile(PId) ON DELETE CASCADE	
);

CREATE TABLE chores
(
	CId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	CSId BIGINT UNSIGNED NOT NULL,
    name VARCHAR(30) NOT NULL,
	description VARCHAR(50),
	defaultPoints DOUBLE UNSIGNED DEFAULT 0,
	PRIMARY KEY(CId),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId) ON DELETE CASCADE	
);

CREATE TABLE rules
(
	RId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	CSId BIGINT UNSIGNED NOT NULL,
	name VARCHAR(30) NOT NULL,
	isPermission BOOLEAN DEFAULT FALSE,
	PRIMARY KEY(RId),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId) ON DELETE CASCADE	
);

CREATE TABLE action
(
	AId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	RId BIGINT UNSIGNED NOT NULL,
	name VARCHAR(30) NOT NULL,
	points DOUBLE,
	controllerId BIGINT UNSIGNED,
	PRIMARY KEY(AId),
	FOREIGN KEY (controllerId) REFERENCES controller(CSerieNo) ON DELETE CASCADE	,
	FOREIGN KEY(RId) REFERENCES rules(RId) ON DELETE CASCADE	
);
CREATE TABLE rcondition
(
	condId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	RId BIGINT UNSIGNED NOT NULL,
	name VARCHAR(30) NOT NULL,
	controllerId BIGINT UNSIGNED,
	FOREIGN KEY (controllerId) REFERENCES controller(CSerieNo) ON DELETE CASCADE	,
	FOREIGN KEY(RId) REFERENCES rules(RId) ON DELETE CASCADE	,
	PRIMARY KEY(condId)
);


CREATE TABLE cond_timeperiod
(
	condTimepId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	condId BIGINT UNSIGNED,  
	timeFrom DATETIME NOT NULL,
	timeTo DATETIME NOT NULL,
	weekdays SET ('monday','tuesday','wednesday','thursday','friday','saturday','sunday'),
	weekly BOOLEAN DEFAULT FALSE,
	ndWeekly BOOLEAN DEFAULT FALSE,
	rdWeekly BOOLEAN DEFAULT FALSE,
	firstInMonth BOOLEAN DEFAULT FALSE,
	lastInMonth BOOLEAN DEFAULT FALSE,
	weekNumber TINYINT,
	PRIMARY KEY(condTimepId),
	FOREIGN KEY (condId) REFERENCES rCondition(condId) ON DELETE CASCADE	
);


CREATE TABLE cond_timestamp
(
	condTimesId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	condId BIGINT UNSIGNED NOT NULL,
	onTimestamp TIMESTAMP NOT NULL,
	PRIMARY KEY(condTimesId),
	FOREIGN KEY (condId) REFERENCES rCondition(condId) ON DELETE CASCADE	
);

CREATE TABLE controller_used_by_tag
(
    TSerieNo BIGINT UNSIGNED NOT NULL,
	CSerieNo BIGINT UNSIGNED NOT NULL,
	starttime TIMESTAMP NOT NULL, 
	endtime TIMESTAMP, 
	FOREIGN KEY(TSerieNo) REFERENCES tag(TSerieNo) ON DELETE CASCADE	,	
	FOREIGN KEY(CSerieNo) REFERENCES controller(CSerieNo) ON DELETE CASCADE	,
	PRIMARY KEY(TSerieNo, CSerieNo, starttime)
);

CREATE TABLE profile_has_rules
(
    PId BIGINT UNSIGNED NOT NULL,
	RId BIGINT UNSIGNED NOT NULL,
	validFromTime TIMESTAMP,
	FOREIGN KEY(PId) REFERENCES profile(PId) ON DELETE CASCADE	,	
	FOREIGN KEY(RId) REFERENCES rules(RId) ON DELETE CASCADE	,
	PRIMARY KEY(PId, RId)
);

CREATE TABLE profile_did_chores
(
    PId BIGINT UNSIGNED NOT NULL,
	CId BIGINT UNSIGNED NOT NULL,
	actualPoints DOUBLE,
	timeOfCreation TIMESTAMP,
	FOREIGN KEY(PId) REFERENCES profile(PId) ON DELETE CASCADE	,	
	FOREIGN KEY(CId) REFERENCES chores(CId) ON DELETE CASCADE	,
	PRIMARY KEY(PId, CId, timeOfCreation)
);