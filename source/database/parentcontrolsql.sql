/*lave en database e.g.: CREATE DATABASE smartparentalcontrol;
også kør det følgende
*/


CREATE TABLE control_system
(
    CSId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
    email VARCHAR(30) NOT NULL,
    username VARCHAR(30) NOT NULL UNIQUE,
    password  VARCHAR(50) NOT NULL,
    PRIMARY KEY(CSId)    
);


CREATE TABLE profile
(
    PId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	name VARCHAR(30),
	points DOUBLE DEFAULT 0,
	mobil_number VARCHAR(10),
	CSId BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY(PId),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId)	
);

CREATE TABLE device
(
    DSerieNo BIGINT UNSIGNED NOT NULL UNIQUE,
	name VARCHAR(30) NOT NULL,
	location VARCHAR(30),
	status  ENUM('!', 'GREEN', 'RED') DEFAULT '!' ,
	CSId BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY(DSerieNo),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId)	
);

CREATE TABLE tag
(
    TSerieNo BIGINT UNSIGNED NOT NULL UNIQUE,
	name VARCHAR(30) NOT NULL,
	active BOOLEAN DEFAULT FALSE,
	CSId BIGINT UNSIGNED NOT NULL,
	profileId BIGINT UNSIGNED,
	
	PRIMARY KEY(TSerieNo),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId),
	FOREIGN KEY (profileId) REFERENCES profile(PId) 
);



CREATE TABLE chores
(
	CId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
    name VARCHAR(30) NOT NULL,
	description VARCHAR(50),
	defaultPoints DOUBLE UNSIGNED DEFAULT 0,
	CSId BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY(CId),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId)
);
CREATE TABLE permission
(
	PerId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	name VARCHAR(30) NOT NULL,
	CSId BIGINT UNSIGNED NOT NULL,
	profileId BIGINT UNSIGNED,
	PRIMARY KEY (PerId),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId),
	FOREIGN KEY (profileId) REFERENCES profile(PId)


);

CREATE TABLE rules
(
	RId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	name VARCHAR(30) NOT NULL,
	profileId BIGINT UNSIGNED,
	CSId BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY(RId),
	FOREIGN KEY (CSId) REFERENCES control_system(CSId),
	FOREIGN KEY (profileId) REFERENCES profile(PId)	
);

CREATE TABLE action
(
	AId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	name VARCHAR(30) NOT NULL,
	points DOUBLE,
	deviceId BIGINT UNSIGNED,
	PRIMARY KEY(AId),
	FOREIGN KEY (deviceId) REFERENCES device(DSerieNo)
);
CREATE TABLE rCondition
(
	condId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	name VARCHAR(30) NOT NULL,
	PRIMARY KEY(condId)
);

/* This cond_timeperiode is ugly, it is linked both to condition and permission so condId  or PerId may be null but not both*/
CREATE TABLE cond_timeperiod
(
	condTimepId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	condId BIGINT UNSIGNED,  
	PerId BIGINT UNSIGNED,
	timeFrom DATETIME NOT NULL,
	timeTo DATETIME NOT NULL,
	weekdays SET ('monday','tuesday','wednesday','thursday','friday','saturday','sunday'),
	weekly BOOLEAN DEFAULT FALSE,
	ndWeekly BOOLEAN DEFAULT FALSE,
	rdWeekly BOOLEAN DEFAULT FALSE,
	firstInMonth BOOLEAN DEFAULT FALSE,
	lastInMonth BOOLEAN DEFAULT FALSE,
	weekNumber TINYINT,
	PRIMARY KEY(condTimepId),
	FOREIGN KEY (condId) REFERENCES rCondition(condId),
	FOREIGN KEY (PerId) REFERENCES permission(PerId)
);

CREATE TABLE cond_device_on_off
(
	condDevId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	condId BIGINT UNSIGNED NOT NULL,
	deviceId BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY(condDevId),
	FOREIGN KEY (condId) REFERENCES rCondition(condId),
	FOREIGN KEY (deviceId) REFERENCES device(DSerieNo)
);

CREATE TABLE cond_timestamp
(
	condTimesId BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	condId BIGINT UNSIGNED NOT NULL,
	onTimestamp TIMESTAMP NOT NULL,
	PRIMARY KEY(condTimesId),
	FOREIGN KEY (condId) REFERENCES rCondition(condId)
);

CREATE TABLE device_used_by_tag
(
    TSerieNo BIGINT UNSIGNED NOT NULL,
	DSerieNo BIGINT UNSIGNED NOT NULL,
	starttime TIMESTAMP, 
	endtime TIMESTAMP, 
	FOREIGN KEY(TSerieNo) REFERENCES tag(TSerieNo),	
	FOREIGN KEY(DSerieNo) REFERENCES device(DSerieNo),
	PRIMARY KEY(TSerieNo, DSerieNo, starttime)
);

CREATE TABLE profile_has_rules
(
    PId BIGINT UNSIGNED NOT NULL,
	RId BIGINT UNSIGNED NOT NULL,
	validFromTime TIMESTAMP,
	FOREIGN KEY(PId) REFERENCES profile(PId),	
	FOREIGN KEY(RId) REFERENCES rules(RId),
	PRIMARY KEY(PId, RId)
);

CREATE TABLE profile_did_chores
(
    PId BIGINT UNSIGNED NOT NULL,
	CId BIGINT UNSIGNED NOT NULL,
	actualPoints DOUBLE,
	timeOfCreation TIMESTAMP,
	FOREIGN KEY(PId) REFERENCES profile(PId),	
	FOREIGN KEY(CId) REFERENCES chores(CId),
	PRIMARY KEY(PId, CId, timeOfCreation)
);